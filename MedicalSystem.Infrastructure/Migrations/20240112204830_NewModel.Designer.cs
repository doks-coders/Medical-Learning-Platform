// <auto-generated />
using System;
using MedicalSystem.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedicalSystem.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240112204830_NewModel")]
    partial class NewModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MedicalSystem.Models.Models.AssignmentFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("AssignmentFiles");
                });

            modelBuilder.Entity("MedicalSystem.Models.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Study of the structure and organization of the body and its parts, including organs and tissues.",
                            Name = "Anatomy"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Exploration of the chemical processes and substances that occur within living organisms.",
                            Name = "Biochemistry"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Investigation of the nature and causes of diseases, including the examination of tissues, organs, and bodily fluids.",
                            Name = "Pathology"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Study of drugs and their interactions with living organisms, including their mechanisms of action and therapeutic uses.",
                            Name = "Pharmacology"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Development of practical abilities and techniques essential for healthcare professionals, including patient examination and communication.",
                            Name = "Clinical Skills"
                        });
                });

            modelBuilder.Entity("MedicalSystem.Models.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateUploaded")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseName = "Anatomy",
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(2683),
                            ExamName = "MED Anatomy 101",
                            Year = 2024
                        },
                        new
                        {
                            Id = 2,
                            CourseName = "Biochemistry",
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(2693),
                            ExamName = "Med Biochem Exam",
                            Year = 2024
                        },
                        new
                        {
                            Id = 3,
                            CourseName = "Pathology",
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(2696),
                            ExamName = "Pathology Board Exam",
                            Year = 2024
                        },
                        new
                        {
                            Id = 4,
                            CourseName = "Pharmacology",
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(2699),
                            ExamName = "Pharmaceutical Licensing Exam",
                            Year = 2024
                        },
                        new
                        {
                            Id = 5,
                            CourseName = "Clinical Skills",
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(2702),
                            ExamName = "Clinical Skills Assessment",
                            Year = 2024
                        });
                });

            modelBuilder.Entity("MedicalSystem.Models.Models.ExamFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("ExamFiles");
                });

            modelBuilder.Entity("MedicalSystem.Models.Models.NoteFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("NoteFiles");
                });

            modelBuilder.Entity("MedicalSystem.Models.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateUploaded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LectureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "An overview of the basic principles and structures of the human body.",
                            CourseId = 1,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3561),
                            LectureDate = new DateTime(2024, 1, 13, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3566),
                            Title = "Introduction to Human Anatomy"
                        },
                        new
                        {
                            Id = 2,
                            About = "In-depth study of the human skeletal system and its functions.",
                            CourseId = 1,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3583),
                            LectureDate = new DateTime(2024, 1, 14, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3585),
                            Title = "Skeletal System"
                        },
                        new
                        {
                            Id = 3,
                            About = "Understanding the muscles and their role in movement.",
                            CourseId = 1,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3588),
                            LectureDate = new DateTime(2024, 1, 15, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3590),
                            Title = "Muscular System"
                        },
                        new
                        {
                            Id = 4,
                            About = "Exploring the anatomy of the heart and blood vessels.",
                            CourseId = 1,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3592),
                            LectureDate = new DateTime(2024, 1, 16, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3593),
                            Title = "Circulatory System"
                        },
                        new
                        {
                            Id = 5,
                            About = "Study of the lungs and the process of breathing.",
                            CourseId = 1,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3596),
                            LectureDate = new DateTime(2024, 1, 17, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3597),
                            Title = "Respiratory System"
                        },
                        new
                        {
                            Id = 6,
                            About = "Anatomy of the gastrointestinal tract and digestion.",
                            CourseId = 1,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3602),
                            LectureDate = new DateTime(2024, 1, 18, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3603),
                            Title = "Digestive System"
                        },
                        new
                        {
                            Id = 7,
                            About = "Understanding the structure and function of the nervous system.",
                            CourseId = 1,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3606),
                            LectureDate = new DateTime(2024, 1, 19, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3607),
                            Title = "Nervous System"
                        },
                        new
                        {
                            Id = 8,
                            About = "Study of glands and hormones regulating body functions.",
                            CourseId = 1,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3610),
                            LectureDate = new DateTime(2024, 1, 20, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3611),
                            Title = "Endocrine System"
                        },
                        new
                        {
                            Id = 9,
                            About = "Exploration of the anatomy and function of the kidneys and urinary tract.",
                            CourseId = 1,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3614),
                            LectureDate = new DateTime(2024, 1, 21, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3615),
                            Title = "Urinary System"
                        },
                        new
                        {
                            Id = 10,
                            About = "Study of the male and female reproductive organs and their functions.",
                            CourseId = 1,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3619),
                            LectureDate = new DateTime(2024, 1, 22, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3620),
                            Title = "Reproductive System"
                        },
                        new
                        {
                            Id = 11,
                            About = "An overview of fundamental biochemical processes in living organisms.",
                            CourseId = 2,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3624),
                            LectureDate = new DateTime(2024, 1, 13, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3625),
                            Title = "Introduction to Biochemical Processes"
                        },
                        new
                        {
                            Id = 12,
                            About = "Study of enzyme-catalyzed reactions and their kinetics.",
                            CourseId = 2,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3629),
                            LectureDate = new DateTime(2024, 1, 14, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3631),
                            Title = "Enzyme Kinetics and Catalysis"
                        },
                        new
                        {
                            Id = 13,
                            About = "Understanding the general principles of cellular metabolism.",
                            CourseId = 2,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3633),
                            LectureDate = new DateTime(2024, 1, 15, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3634),
                            Title = "Metabolism: An Overview"
                        },
                        new
                        {
                            Id = 14,
                            About = "Exploration of cell communication through biochemical signaling.",
                            CourseId = 2,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3637),
                            LectureDate = new DateTime(2024, 1, 16, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3638),
                            Title = "Biochemical Signaling Pathways"
                        },
                        new
                        {
                            Id = 15,
                            About = "In-depth study of the structure and function of proteins.",
                            CourseId = 2,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3640),
                            LectureDate = new DateTime(2024, 1, 17, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3641),
                            Title = "Protein Structure and Function"
                        },
                        new
                        {
                            Id = 16,
                            About = "Understanding the role of nucleic acids in storing and transmitting genetic information.",
                            CourseId = 2,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3645),
                            LectureDate = new DateTime(2024, 1, 18, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3646),
                            Title = "Nucleic Acids and Genetic Information"
                        },
                        new
                        {
                            Id = 17,
                            About = "Study of the metabolic pathways involving carbohydrates.",
                            CourseId = 2,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3648),
                            LectureDate = new DateTime(2024, 1, 19, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3649),
                            Title = "Carbohydrate Metabolism"
                        },
                        new
                        {
                            Id = 18,
                            About = "Exploration of the metabolism of lipids and lipid-derived molecules.",
                            CourseId = 2,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3652),
                            LectureDate = new DateTime(2024, 1, 20, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3653),
                            Title = "Lipid Metabolism"
                        },
                        new
                        {
                            Id = 19,
                            About = "Introduction to experimental techniques in biochemistry.",
                            CourseId = 2,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3656),
                            LectureDate = new DateTime(2024, 1, 21, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3657),
                            Title = "Biochemical Techniques"
                        },
                        new
                        {
                            Id = 20,
                            About = "Application of biochemistry in clinical settings and diagnostics.",
                            CourseId = 2,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3661),
                            LectureDate = new DateTime(2024, 1, 22, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3663),
                            Title = "Clinical Biochemistry"
                        },
                        new
                        {
                            Id = 21,
                            About = "An overview of the basic principles and mechanisms of diseases.",
                            CourseId = 3,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3676),
                            LectureDate = new DateTime(2024, 1, 13, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3677),
                            Title = "Introduction to Medical Pathology"
                        },
                        new
                        {
                            Id = 22,
                            About = "Study of abnormalities at the cellular level in various diseases.",
                            CourseId = 3,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3681),
                            LectureDate = new DateTime(2024, 1, 14, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3682),
                            Title = "Cellular Pathology"
                        },
                        new
                        {
                            Id = 23,
                            About = "Understanding the processes of inflammation and tissue repair.",
                            CourseId = 3,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3685),
                            LectureDate = new DateTime(2024, 1, 15, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3686),
                            Title = "Inflammation and Repair"
                        },
                        new
                        {
                            Id = 24,
                            About = "Study of abnormal growths and tumors in various tissues.",
                            CourseId = 3,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3688),
                            LectureDate = new DateTime(2024, 1, 16, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3690),
                            Title = "Neoplasia"
                        },
                        new
                        {
                            Id = 25,
                            About = "Exploration of diseases affecting the blood and blood-forming tissues.",
                            CourseId = 3,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3692),
                            LectureDate = new DateTime(2024, 1, 17, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3693),
                            Title = "Hematologic Pathology"
                        },
                        new
                        {
                            Id = 26,
                            About = "Study of diseases affecting the heart and blood vessels.",
                            CourseId = 3,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3696),
                            LectureDate = new DateTime(2024, 1, 18, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3698),
                            Title = "Cardiovascular Pathology"
                        },
                        new
                        {
                            Id = 27,
                            About = "Exploration of diseases affecting the respiratory system.",
                            CourseId = 3,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3700),
                            LectureDate = new DateTime(2024, 1, 19, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3701),
                            Title = "Respiratory Pathology"
                        },
                        new
                        {
                            Id = 28,
                            About = "Study of diseases affecting the digestive system.",
                            CourseId = 3,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3704),
                            LectureDate = new DateTime(2024, 1, 20, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3705),
                            Title = "Gastrointestinal Pathology"
                        },
                        new
                        {
                            Id = 29,
                            About = "Understanding diseases affecting the kidneys and urinary tract.",
                            CourseId = 3,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3707),
                            LectureDate = new DateTime(2024, 1, 21, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3708),
                            Title = "Renal Pathology"
                        },
                        new
                        {
                            Id = 30,
                            About = "Study of diseases affecting endocrine glands and hormones.",
                            CourseId = 3,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3713),
                            LectureDate = new DateTime(2024, 1, 22, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3714),
                            Title = "Endocrine Pathology"
                        },
                        new
                        {
                            Id = 31,
                            About = "Overview of the study of drugs and their effects on the body.",
                            CourseId = 4,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3721),
                            LectureDate = new DateTime(2024, 1, 13, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3722),
                            Title = "Introduction to Pharmacology"
                        },
                        new
                        {
                            Id = 32,
                            About = "Study of drug absorption, distribution, metabolism, and excretion.",
                            CourseId = 4,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3727),
                            LectureDate = new DateTime(2024, 1, 14, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3728),
                            Title = "Pharmacokinetics"
                        },
                        new
                        {
                            Id = 33,
                            About = "Understanding the interactions between drugs and their targets in the body.",
                            CourseId = 4,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3730),
                            LectureDate = new DateTime(2024, 1, 15, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3732),
                            Title = "Pharmacodynamics"
                        },
                        new
                        {
                            Id = 34,
                            About = "Exploration of different classes and categories of drugs.",
                            CourseId = 4,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3734),
                            LectureDate = new DateTime(2024, 1, 16, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3735),
                            Title = "Drug Classes and Categories"
                        },
                        new
                        {
                            Id = 35,
                            About = "Study of unwanted effects and reactions to drugs.",
                            CourseId = 4,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3738),
                            LectureDate = new DateTime(2024, 1, 17, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3739),
                            Title = "Adverse Drug Reactions"
                        },
                        new
                        {
                            Id = 36,
                            About = "In-depth study of drugs targeting bacteria, viruses, and fungi.",
                            CourseId = 4,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3743),
                            LectureDate = new DateTime(2024, 1, 18, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3744),
                            Title = "Antimicrobial Pharmacology"
                        },
                        new
                        {
                            Id = 37,
                            About = "Exploration of drugs affecting the nervous system.",
                            CourseId = 4,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3746),
                            LectureDate = new DateTime(2024, 1, 19, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3747),
                            Title = "Neuropharmacology"
                        },
                        new
                        {
                            Id = 38,
                            About = "Study of drugs affecting the cardiovascular system.",
                            CourseId = 4,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3750),
                            LectureDate = new DateTime(2024, 1, 20, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3751),
                            Title = "Cardiovascular Pharmacology"
                        },
                        new
                        {
                            Id = 39,
                            About = "Understanding drugs used in the management of pain.",
                            CourseId = 4,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3753),
                            LectureDate = new DateTime(2024, 1, 21, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3755),
                            Title = "Pain Management"
                        },
                        new
                        {
                            Id = 40,
                            About = "Application of pharmacological principles in the treatment of common diseases.",
                            CourseId = 4,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3839),
                            LectureDate = new DateTime(2024, 1, 22, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3841),
                            Title = "Pharmacotherapy of Common Diseases"
                        },
                        new
                        {
                            Id = 41,
                            About = "Overview of essential skills for healthcare professionals.",
                            CourseId = 5,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3851),
                            LectureDate = new DateTime(2024, 1, 13, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3852),
                            Title = "Introduction to Clinical Skills"
                        },
                        new
                        {
                            Id = 42,
                            About = "Developing effective communication techniques with patients.",
                            CourseId = 5,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3858),
                            LectureDate = new DateTime(2024, 1, 14, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3859),
                            Title = "Patient Communication"
                        },
                        new
                        {
                            Id = 43,
                            About = "Mastering the art of collecting comprehensive patient medical histories.",
                            CourseId = 5,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3861),
                            LectureDate = new DateTime(2024, 1, 15, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3863),
                            Title = "Medical History Taking"
                        },
                        new
                        {
                            Id = 44,
                            About = "Learning and practicing various physical examination techniques.",
                            CourseId = 5,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3866),
                            LectureDate = new DateTime(2024, 1, 16, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3867),
                            Title = "Physical Examination Techniques"
                        },
                        new
                        {
                            Id = 45,
                            About = "Understanding and measuring vital signs accurately.",
                            CourseId = 5,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3870),
                            LectureDate = new DateTime(2024, 1, 17, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3871),
                            Title = "Vital Signs Assessment"
                        },
                        new
                        {
                            Id = 46,
                            About = "Ensuring proper infection control measures in clinical settings.",
                            CourseId = 5,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3875),
                            LectureDate = new DateTime(2024, 1, 18, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3876),
                            Title = "Infection Control Practices"
                        },
                        new
                        {
                            Id = 47,
                            About = "Practical skills in wound assessment, cleaning, and dressing.",
                            CourseId = 5,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3879),
                            LectureDate = new DateTime(2024, 1, 19, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3880),
                            Title = "Wound Care and Dressing Techniques"
                        },
                        new
                        {
                            Id = 48,
                            About = "Guidelines and best practices for accurate medical documentation.",
                            CourseId = 5,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3883),
                            LectureDate = new DateTime(2024, 1, 20, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3884),
                            Title = "Medical Documentation"
                        },
                        new
                        {
                            Id = 49,
                            About = "Developing skills for responding to medical emergencies and providing first aid.",
                            CourseId = 5,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3886),
                            LectureDate = new DateTime(2024, 1, 21, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3887),
                            Title = "Emergency Response and First Aid"
                        },
                        new
                        {
                            Id = 50,
                            About = "Understanding and applying ethical principles in healthcare practice.",
                            CourseId = 5,
                            DateUploaded = new DateTime(2024, 1, 12, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3892),
                            LectureDate = new DateTime(2024, 1, 22, 21, 48, 28, 593, DateTimeKind.Local).AddTicks(3893),
                            Title = "Professional Ethics in Healthcare"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MedicalSystem.Models.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("MedicalSystem.Models.Models.AssignmentFile", b =>
                {
                    b.HasOne("MedicalSystem.Models.Models.Topic", "Topic")
                        .WithMany("AssignmentFiles")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("MedicalSystem.Models.Models.ExamFile", b =>
                {
                    b.HasOne("MedicalSystem.Models.Models.Exam", "Exam")
                        .WithMany("ExamFiles")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("MedicalSystem.Models.Models.NoteFile", b =>
                {
                    b.HasOne("MedicalSystem.Models.Models.Topic", "Topic")
                        .WithMany("NoteFiles")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("MedicalSystem.Models.Models.Topic", b =>
                {
                    b.HasOne("MedicalSystem.Models.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MedicalSystem.Models.Models.Exam", b =>
                {
                    b.Navigation("ExamFiles");
                });

            modelBuilder.Entity("MedicalSystem.Models.Models.Topic", b =>
                {
                    b.Navigation("AssignmentFiles");

                    b.Navigation("NoteFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
